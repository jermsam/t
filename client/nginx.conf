# Load in the headers more module
load_module /usr/local/nginx/modules/ngx_http_headers_more_filter_module.so;

user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {

    # Hide nginx server version
    server_tokens off;

    # Hide nginx server
    more_clear_headers 'Server';
    more_clear_headers 'X-Powered-By';

    # include all file types
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                  '$status $body_bytes_sent "$http_referer" '
                  '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log main;

    sendfile        on;
    #tcp_nopush     on;

    keepalive_timeout  65;

    #gzip  on;

     server {
          listen 80;
          # Hide the time server requests take to make it hard to know performance and scallability of the server
          proxy_hide_header X-Runtime;
           # Hide tech used to power the server
          proxy_hide_header X-Powered-by;
          # Hide Content-Security-Policy
          proxy_hide_header Content-Security-Policy;
          # prevent embedding site as wireframe in other sites
          add_header X-Frame-Options "DENY" always;
          # removes Server header from response headers
          # more_clear_headers Server;
          # This prevents the browser from “sniffing” the asset to try and determine if the file type is something other than what is declared by the server
          add_header 'X-Content-Type-Options'  'nosniff' always;
          # The page can only be embedded in a frame on a page with the same origin as itself
          add_header 'X-Frame-Options' 'sameorigin';
          # Enables XSS filtering. Rather than sanitizing the page, the browser will prevent rendering of the page if an attack is detected
          add_header 'X-XSS-Protection' '1; mode=block';
          # informs browsers that the site (and subdomains) should only be accessed using HTTPS
          add_header 'Strict-Transport-Security' 'max-age=31536000; includeSubDomains; preload';

          add_header 'Cache-control' 'no-cache';
          # Allow to load content and resources only from your domain only
          # add_header 'Content-Security-Policy' "default-src 'self'; font-src 'self'; img-src 'self'; script-src 'self'; style-src 'self'; frame-src 'self'";
          add_header 'Content-Security-Policy' "default-src 'none';img-src 'self'; connect-src 'self' ws:; script-src 'self' www.google-analytics.com 'unsafe-inline'; style-src 'self' https://fonts.googleapis.com 'unsafe-inline'; font-src 'self' https://fonts.gstatic.com; base-uri 'self';" always;
         #  Allows web developers to selectively enable, disable, and modify the behavior of certain APIs and web features in the browser.
          add_header 'Permissions-Policy' 'camera=(), geolocation=(), microphone=()';
         # sets the parameter for amount of information sent along with Referrer Header while making a request sameorigin sends referrer information when origin is on same website but no information is sent for cross origin.
          add_header 'Referrer-Policy' 'same-origin';

          location / {
              root   /usr/share/nginx/html;
              try_files $uri $uri/ /index.html;
          }
      }

#     include /etc/nginx/conf.d/*.conf;
}



